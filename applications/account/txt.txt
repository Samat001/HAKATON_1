class ResetPasswordSerializer(serializers.Serializer):
    email = serializers.EmailField()
    new_password = serializers.CharField(max_length=128)
    password2 = serializers.CharField(max_length=128)
    # reset_date = serializers.DateField()
    def validate_email(self,email):
        if User.objects.filter(email=email).exists():
            return email
        raise serializers.ValidationError('Пользователь не найден!')
    def validate(self, data):
        if data['new_password'] != data['password2']:
            raise serializers.ValidationError('Пароль и подтверждение пароля не совпадают!')
        data.pop('password2', None)
        return data

class ResetPasswordView(APIView):
    def post(self, request):
        serializer = ResetPasswordSerializer(data=request.data)
        if serializer.is_valid():
            email = serializer.validated_data['email']
            new_password = serializer.validated_data['new_password']
            # reset_date = serializer.validated_data['reset_date']
            user = User.objects.get(email=email)
            user.create_activation_code()
            user.save()
            send_resset_code(user.email, user.activation_code)
            
            
            return Response({'message': 'Запрос на смену пароля успешно отправлен'})
        else:
            return Response(serializer.errors, status=status.HTTP_400_BAD_REQUEST)